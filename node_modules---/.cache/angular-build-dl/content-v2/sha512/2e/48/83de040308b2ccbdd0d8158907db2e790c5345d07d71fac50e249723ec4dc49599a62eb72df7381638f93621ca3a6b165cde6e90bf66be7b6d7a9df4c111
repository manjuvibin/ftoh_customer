(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["order-order-module"],{

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/order/order.page.html":
/*!*****************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/order/order.page.html ***!
  \*****************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<ion-header>\n  <ion-toolbar>\n    <ion-buttons slot=\"start\">\n      <ion-back-button icon=\"arrow-back\"></ion-back-button>\n    </ion-buttons>\n    <ion-title>\n      {{'Order'| translate }}\n    </ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content [scrollEvents]=\"true\">\n  <ion-card>\n    <ion-card-header>\n      <h4>{{'Shipping Address'|translate}}</h4>\n    </ion-card-header>\n    <ion-card-content>\n      {{orderDetail.delivery_street_address+', '+orderDetail.delivery_city+', '+orderDetail.delivery_state+'\n      '+orderDetail.delivery_postcode+',\n      '+orderDetail.delivery_country}}\n    </ion-card-content>\n  </ion-card>\n\n  <ion-card>\n    <ion-card-header>\n      <h4>{{'Billing Address'|translate}}</h4>\n    </ion-card-header>\n    <ion-card-content>\n      {{orderDetail.billing_street_address+', '+orderDetail.billing_city+', '+orderDetail.billing_state+'\n      '+orderDetail.billing_postcode+',\n      '+orderDetail.billing_country}}\n    </ion-card-content>\n  </ion-card>\n\n  <ion-card>\n    <ion-card-header>\n      <h4>{{'Shipping Method'|translate}}</h4>\n    </ion-card-header>\n    <ion-card-content>\n      {{orderDetail.shipping_method}}\n    </ion-card-content>\n  </ion-card>\n\n  <ion-card class=\"order-product\">\n    <ion-card-header>\n      <h4>{{'Products'|translate}}</h4>\n    </ion-card-header>\n    <ion-card-content *ngFor=\"let product of products\">\n      <ion-row class=\"row-product\">\n        <ion-col>\n          <h3>{{product.products_name}}\n            <br>\n            <small>{{product.categories_name}}</small>\n          </h3>\n        </ion-col>\n      </ion-row>\n      <ion-item lines=\"full\">\n        <ion-thumbnail slot=\"start\">\n          <img src=\"{{config.imgUrl+product.image}}\">\n        </ion-thumbnail>\n        <ion-label>\n          <ion-row>\n            <ion-col class=\"ion-text-left\" size=\"6\">{{'Price' |translate}}&nbsp;:&nbsp;</ion-col>\n            <ion-col class=\"ion-text-right\" size=\"6\">{{product.price| curency}}</ion-col>\n          </ion-row>\n\n          <ion-row>\n            <ion-col class=\"ion-text-left\" size=\"6\">{{'Quantity'|translate}}&nbsp;:&nbsp;</ion-col>\n            <ion-col class=\"ion-text-right\" size=\"6\">{{product.customers_basket_quantity}}</ion-col>\n          </ion-row>\n\n          <ion-row *ngFor=\"let att of product.attributes\">\n            <ion-col size=\"6\">{{att.products_options_values+'&nbsp;'+att.products_options}}&nbsp;:</ion-col>\n            <ion-col size=\"6\">{{att.price_prefix +'&nbsp;'+ att.options_values_price+'&nbsp;'+config.curency}}</ion-col>\n          </ion-row>\n\n          <ion-row>\n            <ion-col class=\"ion-text-left\" size=\"6\">\n              <strong>{{'Total' |translate}}</strong>&nbsp;:&nbsp;</ion-col>\n            <ion-col class=\"ion-text-right\" size=\"6\">\n              <strong>{{product.total | curency}}</strong>\n            </ion-col>\n          </ion-row>\n        </ion-label>\n      </ion-item>\n    </ion-card-content>\n  </ion-card>\n\n  <ion-card>\n    <ion-card-header>\n      {{'SubTotal'|translate}}\n    </ion-card-header>\n    <ion-card-content>\n      <ion-row>\n        <ion-col size=\"6\">\n          {{'Products Price'|translate}}\n        </ion-col>\n        <ion-col size=\"6\" class=\"ion-text-right\">\n          {{productsTotal| curency}}\n        </ion-col>\n      </ion-row>\n      <ion-row>\n        <ion-col size=\"6\">\n          {{'Tax'|translate}}\n        </ion-col>\n        <ion-col size=\"6\" class=\"ion-text-right\">\n          {{orderDetail.total_tax| curency}}\n        </ion-col>\n      </ion-row>\n      <ion-row>\n        <ion-col size=\"6\">\n          {{'Shipping Cost'|translate}}\n        </ion-col>\n        <ion-col size=\"6\" class=\"ion-text-right\">\n          {{orderDetail.shipping_cost| curency}}\n        </ion-col>\n      </ion-row>\n      <ion-row *ngIf=\"couponApplied == 1\">\n        <ion-col size=\"6\">\n          {{'Discount'|translate}}\n        </ion-col>\n        <ion-col size=\"6\" class=\"ion-text-right\">\n          {{discount| curency}}\n        </ion-col>\n      </ion-row>\n      <ion-row>\n        <ion-col size=\"6\">\n          <strong>{{'Total'|translate}}</strong>\n        </ion-col>\n        <ion-col size=\"6\" class=\"ion-text-right\">\n          <strong>{{totalAmountWithDisocunt| curency}}</strong>\n        </ion-col>\n      </ion-row>\n    </ion-card-content>\n  </ion-card>\n\n  <ion-card *ngFor=\"let coupon of couponArray\">\n    <ion-card-content>\n      <ion-row>\n        <ion-col size=\"6\">\n          {{'Coupon Code'|translate}}\n        </ion-col>\n        <ion-col size=\"6\" class=\"ion-text-right\">\n          {{coupon.code}}\n        </ion-col>\n      </ion-row>\n      <ion-row>\n        <ion-col size=\"6\">\n          {{'Coupon Amount'|translate}}\n        </ion-col>\n        <ion-col size=\"6\" class=\"ion-text-right\">\n          {{coupon.amount}}\n        </ion-col>\n      </ion-row>\n      <ion-row>\n        <ion-col size=\"12\" *ngIf=\"coupon.discount_type == 'percent'\">\n          {{'A percentage discount for the entire cart'|translate}}\n        </ion-col>\n        <ion-col size=\"12\" *ngIf=\"coupon.discount_type == 'fixed_cart'\">\n          {{'A fixed total discount for the entire cart'|translate}}\n        </ion-col>\n        <ion-col size=\"12\" *ngIf=\"coupon.discount_type == 'fixed_product'\">\n          {{'A fixed total discount for selected products only'|translate}}\n        </ion-col>\n        <ion-col size=\"12\" *ngIf=\"coupon.discount_type == 'percent_product'\">\n          {{'A percentage discount for selected products only'|translate}}\n        </ion-col>\n        <ion-col size=\"12\">\n          <ion-button size=\"small\" color=\"secondary\" (click)=\"deleteCoupon(coupon.code)\">{{'Remove'|translate}}\n          </ion-button>\n        </ion-col>\n      </ion-row>\n    </ion-card-content>\n  </ion-card>\n\n  <ion-card>\n    <ion-card-content>\n      <ion-list>\n        <ion-item>\n          <ion-input type=\"text\" placeholder=\"{{'coupon code'|translate}}\" [(ngModel)]=\"c\"></ion-input>\n          <ion-button fill=\"clear\" item-end (click)=\"getCoupon(c)\">{{'Apply'|translate}}</ion-button>\n        </ion-item>\n      </ion-list>\n\n    </ion-card-content>\n  </ion-card>\n  <ion-button *ngIf=\"!config.appInProduction\" size=\"small\" fill=\"clear\" (click)=\"couponslist()\">\n    {{'Coupon Codes List'|translate}}</ion-button>\n\n  <ion-card>\n    <ion-card-header>\n      {{'Order Notes'|translate}}\n    </ion-card-header>\n    <ion-card-content>\n      <ion-item>\n        <ion-input type=\"text\" placeholder=\"{{'Note to the buyer'|translate}}\" name=\"note\"\n          [(ngModel)]=\"orderDetail.comments\"></ion-input>\n      </ion-item>\n    </ion-card-content>\n  </ion-card>\n\n  <ion-card>\n    <ion-card-content>\n      <ion-list>\n        <ion-item lines=\"none\">\n          <ion-label color=\"dark\">{{'Payment'|translate}}</ion-label>\n          <ion-select interface=\"popover\" [(ngModel)]=\"orderDetail.payment_method\" (ionChange)=\" paymentMehodChanged()\"\n            okText=\"{{'ok'|translate}}\" cancelText=\"{{'Cancel'|translate}}\">\n            <div *ngFor=\"let p of paymentMethods\">\n              <ion-select-option *ngIf=\"p.active==1\" [value]=\"p.method\">{{p.name|translate}}</ion-select-option>\n            </div>\n          </ion-select>\n        </ion-item>\n      </ion-list>\n    </ion-card-content>\n  </ion-card>\n\n\n  <div class=\"braintree-paypal\" [class.hidden]=\"orderDetail.payment_method!='braintree_paypal'\">\n    <div id=\"paypal-container\"></div>\n  </div>\n\n  <div class=\"braintree-card\" [class.hidden]=\"orderDetail.payment_method!='braintree_card'\">\n    <form id=\"braintree-form\" class=\"form\" #brainForm=\"ngForm\">\n      <div id=\"error-message\"></div>\n      <label class=\"hosted-fields--label\" for=\"card-number\" translate>{{'Card Number'|translate}}</label>\n      <div class=\"hosted-field form-control\" id=\"card-number\" value=\"4111111111111111\"></div>\n\n      <label class=\"hosted-fields--label\" for=\"cvv\" value=\"123\">CVV</label>\n      <div class=\"hosted-field form-control\" id=\"cvv\"></div>\n\n      <label class=\"hosted-fields--label\" for=\"expiration-date\" translate>{{'Expiration Date'|translate}}</label>\n      <div class=\"hosted-field form-control\" id=\"expiration-date\" value=\"10/2019\"></div>\n\n      <input type=\"hidden\" name=\"payment-method-nonce\">\n      <ion-button expand=\"full\" color=\"secondary\" type=\"submit\" id=\"braintreesubmit\" disabled>\n        {{'Continue'|translate}}</ion-button>\n    </form>\n  </div>\n\n  <div class=\"stripe-card\" *ngIf=\"orderDetail.payment_method=='stripe'\">\n    <form #stripeForm=\"ngForm\" (ngSubmit)=\"stripePayment()\">\n      <ion-row>\n        <ion-col>\n          <ion-list>\n\n            <ion-item>\n              <ion-input type=\"number\" name=\"number\" placeholder=\"{{'Card Number'|translate}}\"\n                [(ngModel)]=\"stripeCard.number\" required></ion-input>\n            </ion-item>\n            <ion-item>\n              <ion-label>{{'Expire Month'|translate}}</ion-label>\n              <ion-select name=\"expMonth\" [(ngModel)]=\"stripeCard.expMonth\" required>\n                <ion-select-option *ngFor=\"let n of [1,2,3,4,5,6,7,8,9,10,11,12]\" value=\"{{n}}\">{{n}}\n                </ion-select-option>\n              </ion-select>\n            </ion-item>\n\n            <ion-item>\n              <ion-label>{{'Expire Year'|translate}}</ion-label>\n              <ion-select name=\"expYear\" [(ngModel)]=\"stripeCard.expYear\" required>\n                <ion-select-option\n                  *ngFor=\"let n of [2017,2018,2019,2020,2021,2022,2023,2024,2025,2026,2027,2028,2029,2030,2031,2032,2033]\"\n                  value=\"{{n}}\">{{n}}</ion-select-option>\n              </ion-select>\n            </ion-item>\n\n            <ion-item>\n              <ion-input type=\"number\" name=\"cvc\" placeholder=\"{{'CVC'|translate}}\" [(ngModel)]=\"stripeCard.cvc\"\n                required></ion-input>\n            </ion-item>\n\n          </ion-list>\n        </ion-col>\n      </ion-row>\n\n      <ion-row>\n        <ion-col>\n          <ion-button expand=\"full\" color=\"secondary\" type=\"submit\" [disabled]=\"!stripeForm.form.valid\">\n            {{'Continue'|translate}}</ion-button>\n        </ion-col>\n      </ion-row>\n    </form>\n  </div>\n  <!-- new payment method hyperpay  -->\n  <div class=\"stripe-card\" *ngIf=\"orderDetail.payment_method=='hyperpay' || orderDetail.payment_method=='cybersource'\">\n    <form #card=\"ngForm\" (ngSubmit)=\"hyperpayPayment()\">\n      <ion-row>\n        <ion-col>\n          <ion-list>\n\n            <ion-item>\n              <ion-input type=\"number\" name=\"number\" placeholder=\"{{'Card Number'|translate}}\"\n                [(ngModel)]=\"orderDetail.account_number\" required></ion-input>\n            </ion-item>\n            <ion-item>\n              <ion-label>{{'Expire Month'|translate}}</ion-label>\n              <ion-select name=\"expMonth\" [(ngModel)]=\"orderDetail.expiration_month\" required>\n                <ion-select-option *ngFor=\"let n of [1,2,3,4,5,6,7,8,9,10,11,12]\" value=\"{{n}}\">{{n}}\n                </ion-select-option>\n              </ion-select>\n            </ion-item>\n\n            <ion-item>\n              <ion-label>{{'Expire Year'|translate}}</ion-label>\n              <ion-select name=\"expYear\" [(ngModel)]=\"orderDetail.expiration_year\" required>\n                <ion-select-option\n                  *ngFor=\"let n of [2017,2018,2019,2020,2021,2022,2023,2024,2025,2026,2027,2028,2029,2030,2031,2032,2033]\"\n                  value=\"{{n}}\">{{n}}</ion-select-option>\n              </ion-select>\n            </ion-item>\n\n            <ion-item>\n              <ion-input type=\"number\" name=\"cvc\" placeholder=\"{{'CVC'|translate}}\" [(ngModel)]=\"orderDetail.cvv2\"\n                required></ion-input>\n            </ion-item>\n\n          </ion-list>\n        </ion-col>\n      </ion-row>\n\n      <ion-row>\n        <ion-col>\n          <ion-button expand=\"full\" color=\"secondary\" type=\"submit\" [disabled]=\"!card.form.valid\">\n            {{'Continue'|translate}}</ion-button>\n        </ion-col>\n      </ion-row>\n    </form>\n  </div>\n  <ion-button expand=\"full\" class=\"button-footer\" color=\"secondary\" (click)=\"addOrder()\"\n    *ngIf=\"orderDetail.payment_method=='cod'\">{{'Continue'|translate}}</ion-button>\n  <ion-button expand=\"full\" *ngIf=\"orderDetail.payment_method=='razorpay'\" class=\"button-footer\" color=\"secondary\"\n    (click)=\"razorPay()\">{{'Continue'|translate}}\n  </ion-button>\n  <ion-button expand=\"full\" *ngIf=\"orderDetail.payment_method=='paytm'\" class=\"button-footer\" color=\"secondary\"\n    (click)=\"paytmPayment()\">{{'Continue'|translate}}\n  </ion-button>\n  <ion-button expand=\"full\" class=\"button-footer\" color=\"secondary\" (click)=\"instamojoPayment()\"\n    *ngIf=\"orderDetail.payment_method=='instamojo'\">{{'Continue'|translate}}</ion-button>\n\n\n\n</ion-content>");

/***/ }),

/***/ "./src/app/order/order.module.ts":
/*!***************************************!*\
  !*** ./src/app/order/order.module.ts ***!
  \***************************************/
/*! exports provided: OrderPageModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OrderPageModule", function() { return OrderPageModule; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm2015/common.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var _ionic_angular__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ionic/angular */ "./node_modules/@ionic/angular/fesm2015/ionic-angular.js");
/* harmony import */ var _order_page__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./order.page */ "./src/app/order/order.page.ts");
/* harmony import */ var src_pipes_pipes_module__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/pipes/pipes.module */ "./src/pipes/pipes.module.ts");








const routes = [
    {
        path: '',
        component: _order_page__WEBPACK_IMPORTED_MODULE_6__["OrderPage"]
    }
];
let OrderPageModule = class OrderPageModule {
};
OrderPageModule = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
        imports: [
            _angular_common__WEBPACK_IMPORTED_MODULE_2__["CommonModule"],
            _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormsModule"],
            _ionic_angular__WEBPACK_IMPORTED_MODULE_5__["IonicModule"],
            _angular_router__WEBPACK_IMPORTED_MODULE_4__["RouterModule"].forChild(routes),
            src_pipes_pipes_module__WEBPACK_IMPORTED_MODULE_7__["PipesModule"],
            src_pipes_pipes_module__WEBPACK_IMPORTED_MODULE_7__["PipesModule"]
        ],
        declarations: [_order_page__WEBPACK_IMPORTED_MODULE_6__["OrderPage"]]
    })
], OrderPageModule);



/***/ }),

/***/ "./src/app/order/order.page.scss":
/*!***************************************!*\
  !*** ./src/app/order/order.page.scss ***!
  \***************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("ion-content ion-col {\n  font-size: 12px;\n}\nion-content ion-card ion-card-header {\n  font-size: 14px;\n  margin-bottom: 0;\n  margin-top: 0;\n  color: var(--ion-color-light-contrast);\n  background-color: var(--ion-color-light-shade);\n  padding-top: 10px !important;\n  padding-left: 10px !important;\n  padding-right: 10px !important;\n  padding-bottom: 10px !important;\n}\nion-content ion-card ion-card-header h4 {\n  margin-top: 0;\n  margin-bottom: 0;\n  font-size: 12px;\n  font-weight: 600;\n}\nion-content ion-card ion-card-content {\n  padding-top: 10px !important;\n  padding-left: 10px !important;\n  padding-right: 10px !important;\n  padding-bottom: 10px !important;\n  font-size: 12px;\n  color: var(--ion-text-color);\n}\nion-content ion-card ion-card-content .card-disable {\n  color: rgba(var(--ion-text-color-rgb), 0.5) !important;\n}\nion-content ion-card ion-card-content h3 {\n  font-size: 16px;\n  margin-bottom: 6px;\n}\nion-content ion-card ion-card-content h3 small {\n  font-size: 80%;\n}\nion-content ion-card ion-card-content .item {\n  --background: transparent;\n}\nion-content .row-product {\n  border-bottom: solid var(--ion-color-light-shade);\n  border-width: 0.2px;\n}\nion-content ion-button {\n  margin: 0;\n}\nion-content .braintree-paypal {\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 10px;\n  max-width: 114px;\n}\nion-content .braintree-card {\n  background-color: var(--ion-background-color);\n  padding: 10px;\n  margin: 10px;\n}\nion-content .braintree-card .form .hosted-fields--label {\n  color: var(--ion-color-dark);\n  font-size: 14px;\n  margin-bottom: 5px;\n  display: block;\n}\nion-content .braintree-card .form .hosted-field {\n  height: 40px;\n  box-sizing: border-box;\n  width: 100%;\n  padding: 6px 12px;\n  display: inline-block;\n  box-shadow: none;\n  font-weight: 600;\n  font-size: 14px;\n  border-radius: 4px;\n  border: 1px solid var(--ion-color-light);\n  line-height: 20px;\n  background-color: var(--ion-color-light);\n  margin-bottom: 10px;\n  transition: all 300ms ease-in-out;\n}\nion-content .braintree-card .form .braintree-hosted-fields-focused {\n  border: 1px solid #64d18a;\n  background-position: left bottom;\n}\nion-content .braintree-card .form .braintree-hosted-fields-invalid {\n  border: 1px solid #ed574a;\n}\nion-content .braintree-card .form .button {\n  margin-top: 0;\n  margin-bottom: 0;\n}\nion-content .stripe-card {\n  background-color: var(--ion-background-color);\n  padding: 10px;\n  margin: 10px;\n}\nion-content .stripe-card .item {\n  background-color: var(--ion-color-light);\n  margin-top: 5px;\n}\nion-content .hidden {\n  display: none;\n}\nion-content .button-footer {\n  height: 45px;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvb3JkZXIvRDpcXGFwcFxcZnRvaF9jdXN0b21lci9zcmNcXGFwcFxcb3JkZXJcXG9yZGVyLnBhZ2Uuc2NzcyIsInNyYy9hcHAvb3JkZXIvb3JkZXIucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNFO0VBQ0UsZUFBQTtBQ0FKO0FER0k7RUFDRSxlQUFBO0VBQ0EsZ0JBQUE7RUFDQSxhQUFBO0VBQ0Esc0NBQUE7RUFDQSw4Q0FBQTtFQUNBLDRCQUFBO0VBQ0EsNkJBQUE7RUFDQSw4QkFBQTtFQUNBLCtCQUFBO0FDRE47QURFTTtFQUNFLGFBQUE7RUFDQSxnQkFBQTtFQUNBLGVBQUE7RUFDQSxnQkFBQTtBQ0FSO0FER0k7RUFDRSw0QkFBQTtFQUNBLDZCQUFBO0VBQ0EsOEJBQUE7RUFDQSwrQkFBQTtFQUNBLGVBQUE7RUFDQSw0QkFBQTtBQ0ROO0FERU07RUFDRSxzREFBQTtBQ0FSO0FERU07RUFDRSxlQUFBO0VBQ0Esa0JBQUE7QUNBUjtBREVRO0VBQ0UsY0FBQTtBQ0FWO0FER007RUFDRSx5QkFBQTtBQ0RSO0FES0U7RUFDRSxpREFBQTtFQUNBLG1CQUFBO0FDSEo7QURLRTtFQUNFLFNBQUE7QUNISjtBRE1FO0VBQ0UsaUJBQUE7RUFDQSxrQkFBQTtFQUNBLG1CQUFBO0VBQ0EsZ0JBQUE7QUNKSjtBRE1FO0VBQ0UsNkNBQUE7RUFDQSxhQUFBO0VBQ0EsWUFBQTtBQ0pKO0FET007RUFDRSw0QkFBQTtFQUNBLGVBQUE7RUFDQSxrQkFBQTtFQUNBLGNBQUE7QUNMUjtBRE9NO0VBQ0UsWUFBQTtFQUNBLHNCQUFBO0VBQ0EsV0FBQTtFQUNBLGlCQUFBO0VBQ0EscUJBQUE7RUFDQSxnQkFBQTtFQUNBLGdCQUFBO0VBQ0EsZUFBQTtFQUNBLGtCQUFBO0VBQ0Esd0NBQUE7RUFDQSxpQkFBQTtFQUNBLHdDQUFBO0VBQ0EsbUJBQUE7RUFDQSxpQ0FBQTtBQ0xSO0FET007RUFDRSx5QkFBQTtFQUNBLGdDQUFBO0FDTFI7QURRTTtFQUNFLHlCQUFBO0FDTlI7QURRTTtFQUNFLGFBQUE7RUFDQSxnQkFBQTtBQ05SO0FEV0U7RUFDRSw2Q0FBQTtFQUNBLGFBQUE7RUFDQSxZQUFBO0FDVEo7QURXSTtFQUNFLHdDQUFBO0VBQ0EsZUFBQTtBQ1ROO0FEYUU7RUFDRSxhQUFBO0FDWEo7QURjRTtFQUNFLFlBQUE7RUFDQSxhQUFBO0VBQ0EsZ0JBQUE7QUNaSiIsImZpbGUiOiJzcmMvYXBwL29yZGVyL29yZGVyLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlvbi1jb250ZW50IHtcbiAgaW9uLWNvbCB7XG4gICAgZm9udC1zaXplOiAxMnB4O1xuICB9XG4gIGlvbi1jYXJkIHtcbiAgICBpb24tY2FyZC1oZWFkZXIge1xuICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgICAgIG1hcmdpbi10b3A6IDA7XG4gICAgICBjb2xvcjogdmFyKC0taW9uLWNvbG9yLWxpZ2h0LWNvbnRyYXN0KTtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWlvbi1jb2xvci1saWdodC1zaGFkZSk7XG4gICAgICBwYWRkaW5nLXRvcDogMTBweCAhaW1wb3J0YW50O1xuICAgICAgcGFkZGluZy1sZWZ0OiAxMHB4ICFpbXBvcnRhbnQ7XG4gICAgICBwYWRkaW5nLXJpZ2h0OiAxMHB4ICFpbXBvcnRhbnQ7XG4gICAgICBwYWRkaW5nLWJvdHRvbTogMTBweCAhaW1wb3J0YW50O1xuICAgICAgaDQge1xuICAgICAgICBtYXJnaW4tdG9wOiAwO1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAwO1xuICAgICAgICBmb250LXNpemU6IDEycHg7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7XG4gICAgICB9XG4gICAgfVxuICAgIGlvbi1jYXJkLWNvbnRlbnQge1xuICAgICAgcGFkZGluZy10b3A6IDEwcHggIWltcG9ydGFudDtcbiAgICAgIHBhZGRpbmctbGVmdDogMTBweCAhaW1wb3J0YW50O1xuICAgICAgcGFkZGluZy1yaWdodDogMTBweCAhaW1wb3J0YW50O1xuICAgICAgcGFkZGluZy1ib3R0b206IDEwcHggIWltcG9ydGFudDtcbiAgICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICAgIGNvbG9yOiB2YXIoLS1pb24tdGV4dC1jb2xvcik7XG4gICAgICAuY2FyZC1kaXNhYmxlIHtcbiAgICAgICAgY29sb3I6IHJnYmEodmFyKC0taW9uLXRleHQtY29sb3ItcmdiKSwgMC41KSAhaW1wb3J0YW50O1xuICAgICAgfVxuICAgICAgaDMge1xuICAgICAgICBmb250LXNpemU6IDE2cHg7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDZweDtcblxuICAgICAgICBzbWFsbCB7XG4gICAgICAgICAgZm9udC1zaXplOiA4MCU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIC5pdGVtIHtcbiAgICAgICAgLS1iYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgLnJvdy1wcm9kdWN0IHtcbiAgICBib3JkZXItYm90dG9tOiBzb2xpZCB2YXIoLS1pb24tY29sb3ItbGlnaHQtc2hhZGUpO1xuICAgIGJvcmRlci13aWR0aDogMC4ycHg7XG4gIH1cbiAgaW9uLWJ1dHRvbiB7XG4gICAgbWFyZ2luOiAwO1xuICB9XG5cbiAgLmJyYWludHJlZS1wYXlwYWwge1xuICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICAgIG1hcmdpbi1yaWdodDogYXV0bztcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICAgIG1heC13aWR0aDogMTE0cHg7XG4gIH1cbiAgLmJyYWludHJlZS1jYXJkIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1pb24tYmFja2dyb3VuZC1jb2xvcik7XG4gICAgcGFkZGluZzogMTBweDtcbiAgICBtYXJnaW46IDEwcHg7XG5cbiAgICAuZm9ybSB7XG4gICAgICAuaG9zdGVkLWZpZWxkcy0tbGFiZWwge1xuICAgICAgICBjb2xvcjogdmFyKC0taW9uLWNvbG9yLWRhcmspO1xuICAgICAgICBmb250LXNpemU6IDE0cHg7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDVweDtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICB9XG4gICAgICAuaG9zdGVkLWZpZWxkIHtcbiAgICAgICAgaGVpZ2h0OiA0MHB4O1xuICAgICAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgcGFkZGluZzogNnB4IDEycHg7XG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgYm94LXNoYWRvdzogbm9uZTtcbiAgICAgICAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgICAgICBib3JkZXItcmFkaXVzOiA0cHg7XG4gICAgICAgIGJvcmRlcjogMXB4IHNvbGlkIHZhcigtLWlvbi1jb2xvci1saWdodCk7XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAyMHB4O1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1pb24tY29sb3ItbGlnaHQpO1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICAgICAgICB0cmFuc2l0aW9uOiBhbGwgMzAwbXMgZWFzZS1pbi1vdXQ7XG4gICAgICB9XG4gICAgICAuYnJhaW50cmVlLWhvc3RlZC1maWVsZHMtZm9jdXNlZCB7XG4gICAgICAgIGJvcmRlcjogMXB4IHNvbGlkICM2NGQxOGE7XG4gICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IGxlZnQgYm90dG9tO1xuICAgICAgfVxuXG4gICAgICAuYnJhaW50cmVlLWhvc3RlZC1maWVsZHMtaW52YWxpZCB7XG4gICAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNlZDU3NGE7XG4gICAgICB9XG4gICAgICAuYnV0dG9uIHtcbiAgICAgICAgbWFyZ2luLXRvcDogMDtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAuc3RyaXBlLWNhcmQge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWlvbi1iYWNrZ3JvdW5kLWNvbG9yKTtcbiAgICBwYWRkaW5nOiAxMHB4O1xuICAgIG1hcmdpbjogMTBweDtcblxuICAgIC5pdGVtIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWlvbi1jb2xvci1saWdodCk7XG4gICAgICBtYXJnaW4tdG9wOiA1cHg7XG4gICAgICAvL2hlaWdodDogMjBweDtcbiAgICB9XG4gIH1cbiAgLmhpZGRlbiB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxuXG4gIC5idXR0b24tZm9vdGVyIHtcbiAgICBoZWlnaHQ6IDQ1cHg7XG4gICAgbWFyZ2luLXRvcDogMDtcbiAgICBtYXJnaW4tYm90dG9tOiAwO1xuICB9XG59XG4iLCJpb24tY29udGVudCBpb24tY29sIHtcbiAgZm9udC1zaXplOiAxMnB4O1xufVxuaW9uLWNvbnRlbnQgaW9uLWNhcmQgaW9uLWNhcmQtaGVhZGVyIHtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBtYXJnaW4tYm90dG9tOiAwO1xuICBtYXJnaW4tdG9wOiAwO1xuICBjb2xvcjogdmFyKC0taW9uLWNvbG9yLWxpZ2h0LWNvbnRyYXN0KTtcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0taW9uLWNvbG9yLWxpZ2h0LXNoYWRlKTtcbiAgcGFkZGluZy10b3A6IDEwcHggIWltcG9ydGFudDtcbiAgcGFkZGluZy1sZWZ0OiAxMHB4ICFpbXBvcnRhbnQ7XG4gIHBhZGRpbmctcmlnaHQ6IDEwcHggIWltcG9ydGFudDtcbiAgcGFkZGluZy1ib3R0b206IDEwcHggIWltcG9ydGFudDtcbn1cbmlvbi1jb250ZW50IGlvbi1jYXJkIGlvbi1jYXJkLWhlYWRlciBoNCB7XG4gIG1hcmdpbi10b3A6IDA7XG4gIG1hcmdpbi1ib3R0b206IDA7XG4gIGZvbnQtc2l6ZTogMTJweDtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbn1cbmlvbi1jb250ZW50IGlvbi1jYXJkIGlvbi1jYXJkLWNvbnRlbnQge1xuICBwYWRkaW5nLXRvcDogMTBweCAhaW1wb3J0YW50O1xuICBwYWRkaW5nLWxlZnQ6IDEwcHggIWltcG9ydGFudDtcbiAgcGFkZGluZy1yaWdodDogMTBweCAhaW1wb3J0YW50O1xuICBwYWRkaW5nLWJvdHRvbTogMTBweCAhaW1wb3J0YW50O1xuICBmb250LXNpemU6IDEycHg7XG4gIGNvbG9yOiB2YXIoLS1pb24tdGV4dC1jb2xvcik7XG59XG5pb24tY29udGVudCBpb24tY2FyZCBpb24tY2FyZC1jb250ZW50IC5jYXJkLWRpc2FibGUge1xuICBjb2xvcjogcmdiYSh2YXIoLS1pb24tdGV4dC1jb2xvci1yZ2IpLCAwLjUpICFpbXBvcnRhbnQ7XG59XG5pb24tY29udGVudCBpb24tY2FyZCBpb24tY2FyZC1jb250ZW50IGgzIHtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBtYXJnaW4tYm90dG9tOiA2cHg7XG59XG5pb24tY29udGVudCBpb24tY2FyZCBpb24tY2FyZC1jb250ZW50IGgzIHNtYWxsIHtcbiAgZm9udC1zaXplOiA4MCU7XG59XG5pb24tY29udGVudCBpb24tY2FyZCBpb24tY2FyZC1jb250ZW50IC5pdGVtIHtcbiAgLS1iYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbn1cbmlvbi1jb250ZW50IC5yb3ctcHJvZHVjdCB7XG4gIGJvcmRlci1ib3R0b206IHNvbGlkIHZhcigtLWlvbi1jb2xvci1saWdodC1zaGFkZSk7XG4gIGJvcmRlci13aWR0aDogMC4ycHg7XG59XG5pb24tY29udGVudCBpb24tYnV0dG9uIHtcbiAgbWFyZ2luOiAwO1xufVxuaW9uLWNvbnRlbnQgLmJyYWludHJlZS1wYXlwYWwge1xuICBtYXJnaW4tbGVmdDogYXV0bztcbiAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICBtYXgtd2lkdGg6IDExNHB4O1xufVxuaW9uLWNvbnRlbnQgLmJyYWludHJlZS1jYXJkIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0taW9uLWJhY2tncm91bmQtY29sb3IpO1xuICBwYWRkaW5nOiAxMHB4O1xuICBtYXJnaW46IDEwcHg7XG59XG5pb24tY29udGVudCAuYnJhaW50cmVlLWNhcmQgLmZvcm0gLmhvc3RlZC1maWVsZHMtLWxhYmVsIHtcbiAgY29sb3I6IHZhcigtLWlvbi1jb2xvci1kYXJrKTtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBtYXJnaW4tYm90dG9tOiA1cHg7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuaW9uLWNvbnRlbnQgLmJyYWludHJlZS1jYXJkIC5mb3JtIC5ob3N0ZWQtZmllbGQge1xuICBoZWlnaHQ6IDQwcHg7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIHdpZHRoOiAxMDAlO1xuICBwYWRkaW5nOiA2cHggMTJweDtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBib3gtc2hhZG93OiBub25lO1xuICBmb250LXdlaWdodDogNjAwO1xuICBmb250LXNpemU6IDE0cHg7XG4gIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgYm9yZGVyOiAxcHggc29saWQgdmFyKC0taW9uLWNvbG9yLWxpZ2h0KTtcbiAgbGluZS1oZWlnaHQ6IDIwcHg7XG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWlvbi1jb2xvci1saWdodCk7XG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XG4gIHRyYW5zaXRpb246IGFsbCAzMDBtcyBlYXNlLWluLW91dDtcbn1cbmlvbi1jb250ZW50IC5icmFpbnRyZWUtY2FyZCAuZm9ybSAuYnJhaW50cmVlLWhvc3RlZC1maWVsZHMtZm9jdXNlZCB7XG4gIGJvcmRlcjogMXB4IHNvbGlkICM2NGQxOGE7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IGxlZnQgYm90dG9tO1xufVxuaW9uLWNvbnRlbnQgLmJyYWludHJlZS1jYXJkIC5mb3JtIC5icmFpbnRyZWUtaG9zdGVkLWZpZWxkcy1pbnZhbGlkIHtcbiAgYm9yZGVyOiAxcHggc29saWQgI2VkNTc0YTtcbn1cbmlvbi1jb250ZW50IC5icmFpbnRyZWUtY2FyZCAuZm9ybSAuYnV0dG9uIHtcbiAgbWFyZ2luLXRvcDogMDtcbiAgbWFyZ2luLWJvdHRvbTogMDtcbn1cbmlvbi1jb250ZW50IC5zdHJpcGUtY2FyZCB7XG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWlvbi1iYWNrZ3JvdW5kLWNvbG9yKTtcbiAgcGFkZGluZzogMTBweDtcbiAgbWFyZ2luOiAxMHB4O1xufVxuaW9uLWNvbnRlbnQgLnN0cmlwZS1jYXJkIC5pdGVtIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0taW9uLWNvbG9yLWxpZ2h0KTtcbiAgbWFyZ2luLXRvcDogNXB4O1xufVxuaW9uLWNvbnRlbnQgLmhpZGRlbiB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5pb24tY29udGVudCAuYnV0dG9uLWZvb3RlciB7XG4gIGhlaWdodDogNDVweDtcbiAgbWFyZ2luLXRvcDogMDtcbiAgbWFyZ2luLWJvdHRvbTogMDtcbn0iXX0= */");

/***/ }),

/***/ "./src/app/order/order.page.ts":
/*!*************************************!*\
  !*** ./src/app/order/order.page.ts ***!
  \*************************************/
/*! exports provided: OrderPage */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OrderPage", function() { return OrderPage; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _ionic_angular__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ionic/angular */ "./node_modules/@ionic/angular/fesm2015/ionic-angular.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm2015/http.js");
/* harmony import */ var src_providers_config_config_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/providers/config/config.service */ "./src/providers/config/config.service.ts");
/* harmony import */ var src_providers_shared_data_shared_data_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/providers/shared-data/shared-data.service */ "./src/providers/shared-data/shared-data.service.ts");
/* harmony import */ var src_providers_loading_loading_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/providers/loading/loading.service */ "./src/providers/loading/loading.service.ts");
/* harmony import */ var src_providers_coupon_coupon_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/providers/coupon/coupon.service */ "./src/providers/coupon/coupon.service.ts");
/* harmony import */ var _ionic_native_in_app_browser_ngx__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @ionic-native/in-app-browser/ngx */ "./node_modules/@ionic-native/in-app-browser/ngx/index.js");
/* harmony import */ var _ionic_native_stripe_ngx__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @ionic-native/stripe/ngx */ "./node_modules/@ionic-native/stripe/ngx/index.js");
/* harmony import */ var src_providers_paytm_paytm_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! src/providers/paytm/paytm.service */ "./src/providers/paytm/paytm.service.ts");
/* harmony import */ var _ionic_native_http_ngx__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @ionic-native/http/ngx */ "./node_modules/@ionic-native/http/ngx/index.js");












let OrderPage = class OrderPage {
    constructor(navCtrl, httpClient, config, shared, loading, couponProvider, actionSheetCtrl, iab, platform, paytmService, httpNative, stripe) {
        this.navCtrl = navCtrl;
        this.httpClient = httpClient;
        this.config = config;
        this.shared = shared;
        this.loading = loading;
        this.couponProvider = couponProvider;
        this.actionSheetCtrl = actionSheetCtrl;
        this.iab = iab;
        this.platform = platform;
        this.paytmService = paytmService;
        this.httpNative = httpNative;
        this.stripe = stripe;
        this.orderDetail = {}; //include shipping address, billing address,  shipping methods.
        this.products = [];
        this.couponArray = [];
        this.couponApplied = 0;
        this.tokenFromServer = null;
        this.discount = 0;
        this.productsTotal = 0;
        this.totalAmountWithDisocunt = 0;
        this.nonce = '';
        this.stripeCard = {
            number: '',
            expMonth: 1,
            expYear: 2020,
            cvc: ''
        };
        this.paymentMethods = [];
        this.paypalClientId = "";
        this.paypalEnviroment = "";
        this.publicKeyStripe = "";
        //============================================================================================  
        //CAlculate Discount total
        this.calculateDiscount = function () {
            var subTotal = 0;
            var total = 0;
            for (let value of this.products) {
                subTotal += parseFloat(value.subtotal);
                total += value.total;
            }
            this.productsTotal = subTotal;
            this.discount = (subTotal - total);
        };
        //============================================================================================  
        //CAlculate all total
        this.calculateTotal = function () {
            let a = 0;
            for (let value of this.products) {
                // console.log(value);
                var subtotal = parseFloat(value.total);
                a = a + subtotal;
            }
            let b = parseFloat(this.orderDetail.total_tax.toString());
            let c = parseFloat(this.orderDetail.shipping_cost.toString());
            this.totalAmountWithDisocunt = parseFloat((parseFloat(a.toString()) + b + c).toString());
            // console.log(" all total " + $scope.totalAmountWithDisocunt);
            // console.log("shipping_tax " + $scope.orderDetail.shipping_tax);
            // console.log(" shipping_cost " + $scope.orderDetail.shipping_cost);
            this.calculateDiscount();
        };
        //============================================================================================  
        //delete Coupon
        this.deleteCoupon = function (code) {
            this.couponArray.forEach((value, index) => {
                if (value.code == code) {
                    this.couponArray.splice(index, 1);
                    return true;
                }
            });
            this.products = (JSON.parse(JSON.stringify(this.shared.cartProducts)));
            this.orderDetail.shipping_cost = this.shared.orderDetails.shipping_cost;
            this.couponArray.forEach((value) => {
                //checking for free shipping
                if (value.free_shipping == true) {
                    this.orderDetail.shippingName = 'free shipping';
                    this.orderDetail.shippingCost = 0;
                }
                this.products = this.couponProvider.apply(value, this.products);
            });
            this.calculateTotal();
            if (this.couponArray.length == 0) {
                this.couponApplied = 0;
            }
        };
        //========================================================================================
        //============================================================================================   
        //getting getMostLikedProducts from the server
        this.getCoupon = function (code) {
            if (code == '' || code == null) {
                this.shared.showAlert('Please enter coupon code!');
                return 0;
            }
            this.loading.show();
            var dat = { 'code': code };
            this.config.postHttp('getcoupon', dat).then((data) => {
                this.loading.hide();
                if (data.success == 1) {
                    let coupon = data.data[0];
                    // console.log($scope.coupon)
                    this.applyCouponCart(coupon);
                }
                if (data.success == 0) {
                    this.shared.showAlert(data.message);
                }
            }, error => {
                this.loading.hide();
                console.log(error);
            });
        };
        //============================================================================================  
        //applying coupon on the cart
        this.applyCouponCart = function (coupon) {
            //checking the coupon is valid or not
            if (this.couponProvider.validateCouponService(coupon, this.products, this.couponArray) == false) {
                return 0;
            }
            else {
                if (coupon.individual_use == 1) {
                    this.products = (JSON.parse(JSON.stringify(this.shared.cartProducts)));
                    this.couponArray = [];
                    this.orderDetail.shipping_cost = this.shared.orderDetails.shipping_cost;
                    console.log('individual_use');
                }
                var v = {};
                v.code = coupon.code;
                v.amount = coupon.amount;
                v.product_ids = coupon.product_ids;
                v.exclude_product_ids = coupon.exclude_product_ids;
                v.product_categories = coupon.product_categories;
                v.excluded_product_categories = coupon.excluded_product_categories;
                v.discount = coupon.amount;
                v.individual_use = coupon.individual_use;
                v.free_shipping = coupon.free_shipping;
                v.discount_type = coupon.discount_type;
                //   v.limit_usage_to_x_items = coupon.limit_usage_to_x_items;
                //  v.usage_limit = coupon.usage_limit;
                // v.used_by = coupon.used_by ;
                // v.usage_limit_per_user = coupon.usage_limit_per_user ;
                // v.exclude_sale_items = coupon.exclude_sale_items;
                this.couponArray.push(v);
            }
            //checking for free shipping
            if (coupon.free_shipping == 1) {
                // $scope.orderDetail.shippingName = 'free shipping';
                this.orderDetail.shipping_cost = 0;
                //  console.log('free_shipping');
            }
            //applying coupon service
            this.products = this.couponProvider.apply(coupon, this.products);
            if (this.couponArray.length != 0) {
                this.couponApplied = 1;
            }
            this.calculateTotal();
        };
    }
    //============================================================================================  
    //placing order
    addOrder(nonce) {
        this.loading.autoHide(5000);
        this.orderDetail.customers_id = this.shared.customerData.customers_id;
        this.orderDetail.customers_name = this.shared.orderDetails.delivery_firstname + " " + this.shared.orderDetails.delivery_lastname;
        this.orderDetail.delivery_name = this.shared.orderDetails.billing_firstname + " " + this.shared.orderDetails.billing_lastname;
        if (this.shared.orderDetails.guest_status == 1) {
            this.orderDetail.email = this.shared.orderDetails.email;
            this.orderDetail.customers_telephone = this.shared.orderDetails.delivery_phone;
        }
        else {
            this.orderDetail.email = this.shared.customerData.email;
            this.orderDetail.customers_telephone = this.shared.customerData.customers_telephone;
        }
        this.orderDetail.latitude = this.shared.orderDetails.delivery_lat;
        this.orderDetail.longitude = this.shared.orderDetails.delivery_long;
        this.orderDetail.delivery_suburb = this.shared.orderDetails.delivery_state;
        this.orderDetail.customers_suburb = this.shared.orderDetails.delivery_state;
        this.orderDetail.customers_address_format_id = '1';
        this.orderDetail.delivery_address_format_id = '1';
        this.orderDetail.products = this.products;
        this.orderDetail.is_coupon_applied = this.couponApplied;
        this.orderDetail.coupons = this.couponArray;
        this.orderDetail.coupon_amount = this.discount;
        this.orderDetail.totalPrice = this.totalAmountWithDisocunt;
        this.orderDetail.nonce = nonce;
        this.orderDetail.language_id = this.config.langId;
        this.orderDetail.currency_code = this.config.currecnyCode;
        var dat = this.orderDetail;
        console.log(dat);
        this.config.postHttp('addtoorder', dat).then((data) => {
            //this.loading.hide();
            if (data.success == 1) {
                this.shared.emptyCart();
                this.products = [];
                this.orderDetail = {};
                //this.shared.orderDetails = {};
                this.navCtrl.navigateRoot(this.config.currentRoute + "/thank-you");
            }
            if (data.success == 0) {
                this.shared.showAlert(data.message);
            }
        }, err => {
            this.shared.showAlert("Server Error" + " " + err.status);
        });
    }
    ;
    initializePaymentMethods() {
        // this.loading.show();
        var dat = {};
        dat.language_id = this.config.langId;
        dat.currency_code = this.config.currecnyCode;
        this.config.postHttp('getpaymentmethods', dat).then((data) => {
            //  this.loading.hide();
            if (data.success == 1) {
                this.paymentMethods = data.data;
                for (let a of data.data) {
                    // if (a.method == "braintree_card" && a.active == '1') { this.getToken(); }
                    // if (a.method == "braintree_paypal" && a.active == '1') { this.getToken(); }
                    if (a.method == "paypal" && a.active == '1') {
                        this.paypalClientId = a.public_key;
                        if (a.environment == "Test")
                            this.paypalEnviroment = "PayPalEnvironmentSandbox";
                        else
                            this.paypalEnviroment = "PayPalEnvironmentProduction";
                    }
                    if (a.method == "stripe" && a.active == '1') {
                        this.publicKeyStripe = a.public_key;
                        this.stripe.setPublishableKey(a.public_key);
                    }
                    if (a.method == "razorpay") {
                        this.keyRazorPay = a.public_key;
                    }
                    // if (a.method == "paytm") {
                    //   this.paytmS = a.public_key;
                    // }
                }
            }
        }, err => {
            this.shared.showAlert("getPaymentMethods Server Error");
        });
    }
    stripePayment() {
        // this.loading.show();
        this.stripe.createCardToken(this.stripeCard)
            .then(token => {
            // this.loading.hide();
            //this.nonce = token.id
            this.addOrder(token.id);
        })
            .catch(error => {
            //this.loading.hide();
            let err = error;
            if (error.message)
                err = error.message;
            console.log(err);
            this.shared.showAlert(err);
        });
    }
    couponslist() {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            // + '<li>Cart Percentage <span>(cp9989)</a><p>{{"A percentage discount for the entire cart"|translate}}</p></li>'
            //   + '<li>Cart Fixed <span>(cf9999)</span> <p>{{"A fixed total discount for the entire cart"|translate}}</p></li>'
            //   + '<li>Product Fixed <span>(pf8787)</span></a><p>{{"A fixed total discount for selected products only"|translate}}</p></li>'
            //   + '<li>Product Percentage <span>(pp2233)</span><p>{{"A percentage discount for selected products only"|translate}}</p></li>'
            //   + '</ul>';
            // this.translate.get(array).subscribe((res) => { });
            let actionSheet = this.actionSheetCtrl.create({
                header: 'Coupons List',
                buttons: [
                    {
                        icon: 'arrow-round-forward',
                        text: 'Cart Percentage (cp9989). A percentage discount for selected products only',
                        handler: () => {
                            this.c = 'cp9989';
                        }
                    }, {
                        icon: 'arrow-round-forward',
                        text: 'Product Fixed (pf8787). A fixed total discount for selected products only',
                        handler: () => {
                            this.c = 'pf8787';
                        }
                    },
                    {
                        icon: 'arrow-round-forward',
                        text: 'Cart Fixed (cf9999). A fixed total discount for the entire cart',
                        handler: () => {
                            this.c = 'cf9999';
                        }
                    },
                    {
                        icon: 'arrow-round-forward',
                        text: 'Product Percentage (pp2233). A percentage discount for selected products only',
                        handler: () => {
                            this.c = 'pp2233';
                        }
                    },
                    {
                        text: 'Cancel',
                        role: 'cancel',
                        handler: () => {
                        }
                    }
                ]
            });
            (yield actionSheet).present();
        });
    }
    //============================================================================================  
    //getting token from server
    getToken() {
        this.loading.autoHide(2000);
        this.config.getHttp('generatebraintreetoken').then((data) => {
            // this.loading.hide();
            if (data.success == 1) {
                if (this.tokenFromServer == null) {
                    this.tokenFromServer = data.token;
                    if (this.orderDetail.payment_method == "braintree_paypal")
                        this.braintreePaypal(this.tokenFromServer);
                    if (this.orderDetail.payment_method == "braintree_card")
                        this.braintreeCreditCard(this.tokenFromServer);
                }
            }
            if (data.success == 0) {
            }
        }, error => {
            // this.loading.hide();
            //if (this.paymentBraintree) {
            this.shared.showAlert("Server Error" + " " + error.status + " Braintree Token");
            // }
        });
    }
    ;
    //================================================================================
    // braintree paypal method
    braintreePaypal(clientToken) {
        this.loading.autoHide(2000);
        var nonce = 0;
        var _this = this;
        var promise = new Promise((resolve, reject) => {
            braintree.setup(clientToken, "custom", {
                paypal: {
                    container: "paypal-container",
                    displayName: "Shop"
                },
                onReady: function () {
                    _this.scrollToBottom();
                    // $(document).find('#braintree-paypal-button').attr('href', 'javascript:void(0)');
                },
                onPaymentMethodReceived: function (obj) {
                    //   console.log(obj.nonce);
                    // this.nonce = obj.nonce;
                    nonce = obj.nonce;
                    resolve();
                }
            });
        });
        promise.then((data) => {
            // console.log(nonce);
            this.addOrder(nonce);
        }, (err) => { console.log(err); });
    }
    ;
    //================================================================================
    // braintree creditcard method
    braintreeCreditCard(clientToken) {
        // this.loading.autoHide(2000);
        var nonce = 0;
        var promise = new Promise((resolve, reject) => {
            var braintreeForm = document.querySelector('#braintree-form');
            var braintreeSubmit = document.querySelector('ion-button[id="braintreesubmit"]');
            braintree.client.create({
                authorization: clientToken
            }, function (clientErr, clientInstance) {
                if (clientErr) { }
                braintree.hostedFields.create({
                    client: clientInstance,
                    styles: {},
                    fields: {
                        number: {
                            selector: '#card-number',
                            placeholder: '4111 1111 1111 1111'
                        },
                        cvv: {
                            selector: '#cvv',
                            placeholder: '123'
                        },
                        expirationDate: {
                            selector: '#expiration-date',
                            placeholder: '10/2019'
                        }
                    }
                }, function (hostedFieldsErr, hostedFieldsInstance) {
                    if (hostedFieldsErr) {
                        // Handle error in Hosted Fields creation
                        //alert("hostedFieldsErr" + hostedFieldsErr);
                        document.getElementById('error-message').innerHTML = "hostedFieldsErr" + hostedFieldsErr;
                        console.log("hostedFieldsErr" + hostedFieldsErr);
                        return;
                    }
                    braintreeSubmit.removeAttribute('disabled');
                    braintreeForm.addEventListener('submit', function (event) {
                        document.getElementById('error-message').innerHTML = null;
                        event.preventDefault();
                        hostedFieldsInstance.tokenize(function (tokenizeErr, payload) {
                            if (tokenizeErr) {
                                //alert('Error : ' + JSON.stringify(tokenizeErr.message));
                                // Handle error in Hosted Fields tokenization
                                document.getElementById('error-message').innerHTML = tokenizeErr.message;
                                return 0;
                            }
                            // Put `payload.nonce` into the `payment-method-nonce` input, and then
                            // submit the form. Alternatively, you could send the nonce to your server
                            // with AJAX.
                            // document.querySelector('input[name="payment-method-nonce"]').value = payload.nonce;
                            // this.nonce = payload.nonce;
                            // this.addOrder(payload.nonce);
                            nonce = payload.nonce;
                            resolve();
                            //  console.log(payload.nonce);
                        });
                    }, false);
                });
            });
        });
        promise.then((data) => {
            this.addOrder(nonce);
        }, (err) => { console.log(err); });
    }
    paymentMehodChanged() {
        if (this.orderDetail.payment_method == "braintree_paypal")
            this.getToken();
        if (this.orderDetail.payment_method == "braintree_card")
            this.getToken();
        //if (this.orderDetail.payment_method == "stripe") this.stripe.setPublishableKey(this.publicKeyStripe);
        this.scrollToBottom();
    }
    scrollToBottom() {
        setTimeout(() => {
            this.content.scrollToBottom();
            console.log("botton");
        }, 300);
    }
    //================================= instamojo ===========================
    instamojoPayment() {
        let instamojoClient = new Instamojo(this.httpNative, this.iab, this.config.url + 'instamojotoken');
        var data = instamojoClient.getPaymentFields();
        data.buyer_name = this.shared.customerData.customers_firstname + " " + this.shared.customerData.customers_lastname;
        data.currency = this.config.currency;
        data.purpose = "Order Payment"; // REQUIRED
        data.amount = this.totalAmountWithDisocunt; // REQUIRED
        //data.phone = this.shared.customerData.customers_telephone
        data.email = this.shared.customerData.email;
        data.send_email = true;
        data.send_sms = false;
        data.allow_repeated_payments = true;
        // do not change this
        data.redirect_url = "http://localhost";
        instamojoClient.payNow(data).then(response => {
            console.log(response);
            this.addOrder(response.id);
            //alert("Payment complete: " + JSON.stringify(response));
        }).catch(err => {
            console.log(err);
            this.shared.showAlert("Payment failed: " + JSON.stringify(err));
            throw err;
        });
    }
    //
    razorPay() {
        let customerName = this.shared.customerData.customers_firstname + " " + this.shared.customerData.customers_lastname;
        let cutomerEmail = this.shared.customerData.email;
        let cutomerPhone = this.shared.customerData.customers_telephone;
        let amount = parseInt((this.totalAmountWithDisocunt * 100).toString());
        //let amount = parseInt((this.totalAmountWithDisocunt.toFixed(2)).toString());
        var options = {
            description: 'Order Payment',
            //image: 'https://i.imgur.com/3g7nmJC.png',
            currency: this.config.currecnyCode,
            key: this.keyRazorPay,
            amount: amount,
            name: customerName,
            prefill: {
                email: cutomerEmail,
                contact: cutomerPhone,
                name: customerName
            },
            theme: {
                color: this.shared.primaryHexColor
            },
            modal: {
                ondismiss: function () {
                    //alert('dismissed')
                }
            }
        };
        let _this = this;
        var successCallback = function (payment_id) {
            _this.addOrder(payment_id);
        };
        var cancelCallback = function (error) {
            _this.shared.toast(error.description + ' (Error ' + error.code + ')');
        };
        RazorpayCheckout.open(options, successCallback, cancelCallback);
        if (this.platform.is('android')) {
            this.platform.resume.subscribe((event) => {
                // Re-register the payment success and cancel callbacks
                RazorpayCheckout.on('payment.success', successCallback);
                RazorpayCheckout.on('payment.cancel', cancelCallback);
                // Pass on the event to RazorpayCheckout
                RazorpayCheckout.onResume(event);
            });
        }
        ;
    }
    paytmPayment() {
        let mId = "";
        let amount = parseInt((this.totalAmountWithDisocunt.toFixed(2)).toString());
        let production = true;
        let cutomerId = 0;
        if (this.shared.customerData.customers_id)
            cutomerId = this.shared.customerData.customers_id;
        let checkSum = "";
        let orderId = "";
        this.paymentMethods.forEach(element => {
            if (element.method == "paytm") {
                mId = element.public_key;
                if (element.environment == "Test") {
                    production = false;
                }
            }
        });
        this.loading.show();
        this.config.getHttp("generatpaytmhashes").then((data) => {
            this.loading.hide();
            checkSum = data.data.CHECKSUMHASH;
            orderId = data.data.ORDER_ID;
            this.paytmService.paytmpage(checkSum, orderId, mId, cutomerId, amount, production).then((data) => {
                if (data.status == "sucess") {
                    this.addOrder(data.id);
                }
                else {
                    this.shared.toast("Paytm Error");
                }
            });
        });
    }
    ngOnInit() {
        this.orderDetail = (JSON.parse(JSON.stringify(this.shared.orderDetails)));
        this.products = (JSON.parse(JSON.stringify(this.shared.cartProducts)));
        this.calculateTotal();
        this.initializePaymentMethods();
    }
    ionViewDidEnter() {
        var toolbar = document.getElementsByTagName("ion-toolbar");
        var style = getComputedStyle(toolbar[0]);
        var color = style.getPropertyValue("--ion-color-primary") || undefined;
        this.shared.primaryHexColor = color;
        console.log(color);
    }
    openHomePage() {
        this.navCtrl.navigateRoot(this.config.currentRoute + "/cart");
    }
    hyperpayPayment() {
        this.addOrder("null");
    }
};
OrderPage.ctorParameters = () => [
    { type: _ionic_angular__WEBPACK_IMPORTED_MODULE_2__["NavController"] },
    { type: _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"] },
    { type: src_providers_config_config_service__WEBPACK_IMPORTED_MODULE_4__["ConfigService"] },
    { type: src_providers_shared_data_shared_data_service__WEBPACK_IMPORTED_MODULE_5__["SharedDataService"] },
    { type: src_providers_loading_loading_service__WEBPACK_IMPORTED_MODULE_6__["LoadingService"] },
    { type: src_providers_coupon_coupon_service__WEBPACK_IMPORTED_MODULE_7__["CouponService"] },
    { type: _ionic_angular__WEBPACK_IMPORTED_MODULE_2__["ActionSheetController"] },
    { type: _ionic_native_in_app_browser_ngx__WEBPACK_IMPORTED_MODULE_8__["InAppBrowser"] },
    { type: _ionic_angular__WEBPACK_IMPORTED_MODULE_2__["Platform"] },
    { type: src_providers_paytm_paytm_service__WEBPACK_IMPORTED_MODULE_10__["PaytmService"] },
    { type: _ionic_native_http_ngx__WEBPACK_IMPORTED_MODULE_11__["HTTP"] },
    { type: _ionic_native_stripe_ngx__WEBPACK_IMPORTED_MODULE_9__["Stripe"] }
];
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(_ionic_angular__WEBPACK_IMPORTED_MODULE_2__["IonContent"], { static: false }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", _ionic_angular__WEBPACK_IMPORTED_MODULE_2__["IonContent"])
], OrderPage.prototype, "content", void 0);
OrderPage = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-order',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./order.page.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/order/order.page.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./order.page.scss */ "./src/app/order/order.page.scss")).default]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_ionic_angular__WEBPACK_IMPORTED_MODULE_2__["NavController"],
        _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"],
        src_providers_config_config_service__WEBPACK_IMPORTED_MODULE_4__["ConfigService"],
        src_providers_shared_data_shared_data_service__WEBPACK_IMPORTED_MODULE_5__["SharedDataService"],
        src_providers_loading_loading_service__WEBPACK_IMPORTED_MODULE_6__["LoadingService"],
        src_providers_coupon_coupon_service__WEBPACK_IMPORTED_MODULE_7__["CouponService"],
        _ionic_angular__WEBPACK_IMPORTED_MODULE_2__["ActionSheetController"],
        _ionic_native_in_app_browser_ngx__WEBPACK_IMPORTED_MODULE_8__["InAppBrowser"],
        _ionic_angular__WEBPACK_IMPORTED_MODULE_2__["Platform"],
        src_providers_paytm_paytm_service__WEBPACK_IMPORTED_MODULE_10__["PaytmService"],
        _ionic_native_http_ngx__WEBPACK_IMPORTED_MODULE_11__["HTTP"],
        _ionic_native_stripe_ngx__WEBPACK_IMPORTED_MODULE_9__["Stripe"]])
], OrderPage);



/***/ }),

/***/ "./src/providers/paytm/paytm.service.ts":
/*!**********************************************!*\
  !*** ./src/providers/paytm/paytm.service.ts ***!
  \**********************************************/
/*! exports provided: PaytmService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PaytmService", function() { return PaytmService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _ionic_native_in_app_browser_ngx__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ionic-native/in-app-browser/ngx */ "./node_modules/@ionic-native/in-app-browser/ngx/index.js");
/* harmony import */ var _shared_data_shared_data_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../shared-data/shared-data.service */ "./src/providers/shared-data/shared-data.service.ts");




let PaytmService = class PaytmService {
    constructor(iab, shared) {
        this.iab = iab;
        this.shared = shared;
    }
    paytmpage(chcksum, orderId, mId, customerId, amount, inProduction) {
        return new Promise(resolve => {
            var paytmUrl = 'https://securegw-stage.paytm.in';
            if (inProduction == true)
                paytmUrl = 'https://securegw.paytm.in';
            var callBackUrl = paytmUrl + "/theia/paytmCallback?ORDER_ID=" + orderId;
            var completeUrl = paytmUrl + "/order/process";
            var pageContetn = `<html>
              <head>
                <title></title>
              </head>
              <body>
                <form method="post" action="${completeUrl}" name="paytm">
                    <table border="1">
                      <tbody>
                          <input type="hidden" name="MID" value="${mId}">
                          <input type="hidden" name="WEBSITE" value="WEBSTAGING">
                          <input type="hidden" name="ORDER_ID" value="${orderId}">
                          <input type="hidden" name="CUST_ID" value="${customerId}">
                          <input type="hidden" name="INDUSTRY_TYPE_ID" value="Retail">
                          <input type="hidden" name="CHANNEL_ID" value="WAP">
                          <input type="hidden" name="TXN_AMOUNT" value="${amount}">
                          <input type="hidden" name="CALLBACK_URL" value="${callBackUrl}">
                          <input type="hidden" name="CHECKSUMHASH" value="${chcksum}">
                      </tbody>
                    </table>
                    <script type="text/javascript">
                      document.paytm.submit();
                    </script>
                </form>
              </body>
          </html>`;
            var pageContentUrl = "data:text/html;base64," + btoa(pageContetn);
            console.log(pageContentUrl);
            let options = {
                location: 'yes',
                hidden: 'no',
                clearcache: 'yes',
                clearsessioncache: 'yes',
                zoom: 'no',
                disallowoverscroll: 'no',
                toolbar: 'yes',
                hideurlbar: "yes"
            };
            const bb = this.iab.create(pageContentUrl, "_blank", options);
            bb.on('loadstart').subscribe(res => {
                console.log(res.url);
                if (res.url == callBackUrl) {
                    console.log("---------------- payment sucess ---------------");
                    bb.close();
                    resolve({ status: "sucess", id: orderId });
                }
            }), error => {
                console.log(error);
                resolve({ status: "error", error: error });
            };
        });
    }
};
PaytmService.ctorParameters = () => [
    { type: _ionic_native_in_app_browser_ngx__WEBPACK_IMPORTED_MODULE_2__["InAppBrowser"] },
    { type: _shared_data_shared_data_service__WEBPACK_IMPORTED_MODULE_3__["SharedDataService"] }
];
PaytmService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
        providedIn: 'root'
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_ionic_native_in_app_browser_ngx__WEBPACK_IMPORTED_MODULE_2__["InAppBrowser"],
        _shared_data_shared_data_service__WEBPACK_IMPORTED_MODULE_3__["SharedDataService"]])
], PaytmService);



/***/ })

}]);
//# sourceMappingURL=order-order-module-es2015.js.map